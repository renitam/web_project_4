!function(){"use strict";function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var e=function(){function e(t,n,r,o,i,a,c){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),this._templateSel=n,this._userData=r,this._name=t.name,this._link=t.link,this._likes=t.likes,this._owner=t.owner,this._id=t._id,this._card=this._getTemplate(),this._trashButton=this._card.querySelector(".card__trash"),this._likeButton=this._card.querySelector(".card__like"),this._likeNumber=this._card.querySelector(".card__like-num"),this._handleAddLike=o,this._handleRemoveLike=i,this._preview=a,this._trash=c}var n,r;return n=e,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._templateSel).content.querySelector(".card").cloneNode(!0)}},{key:"_processLike",value:function(t){this._likes=t.likes,this._likeButton.classList.toggle("card__like_active"),this._likeNumber.textContent=t.likes.length}},{key:"_handleLike",value:function(){var t=this;this._likeButton.classList.contains("card__like_active")?this._handleRemoveLike(this._id).then((function(e){return t._processLike(e)})).catch((function(t){return"Could not load like: ".concat(t)})):this._handleAddLike(this._id).then((function(e){return t._processLike(e)})).catch((function(t){return"Could not load like: ".concat(t)}))}},{key:"_handleTrash",value:function(){this._trash.open(this._card,this._id)}},{key:"_handlePreview",value:function(){this._preview.open(this._link,this._name)}},{key:"_setEventListeners",value:function(){var t=this;this._likeButton.addEventListener("click",(function(){t._handleLike()})),this._trashButton&&this._trashButton.addEventListener("click",(function(){t._handleTrash()})),this._cardImgEl.addEventListener("click",(function(){t._handlePreview()}))}},{key:"createCard",value:function(){var t=this;return this._cardTitleEl=this._card.querySelector(".card__title"),this._cardTitleEl.textContent=this._name,this._cardImgEl=this._card.querySelector(".card__image"),this._cardImgEl.src=this._link,this._cardImgEl.alt="Image of ".concat(this._name),this._cardImgEl.onerror=function(){t._cardImgEl.src="https://memegenerator.net/img/instances/60573683.jpg"},this._likeNumber.textContent=this._likes.length,this._owner._id!=this._userData._id&&this._trashButton.remove(),this._likes.some((function(e){return e._id===t._userData._id}))&&this._likeButton.classList.toggle("card__like_active"),this._setEventListeners(this._card),this._card}}])&&t(n.prototype,r),e}(),n=e;function r(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var o=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._inputSel=e.inputSel,this._submitBtnSel=e.submitBtnSel,this._inactiveBtnClass=e.inactiveBtnClass,this._inputErrClass=e.inputErrClass,this._errorClass=e.errorClass,this._formEl=n}var e,n;return e=t,(n=[{key:"_showInputErr",value:function(t,e){this._errorEl=this._formEl.querySelector(".".concat(this._errorClass,"_").concat(t.id)),t.classList.add(this._inputErrClass),this._errorEl.textContent=e,this._errorEl.classList.add("".concat(this._errorClass,"_active"))}},{key:"_hideInputErr",value:function(t){this._errorEl=this._formEl.querySelector(".".concat(this._errorClass,"_").concat(t.id)),t.classList.remove(this._inputErrClass),this._errorEl.textContent="",this._errorEl.classList.remove("".concat(this._errorClass,"_active"))}},{key:"_checkInputValidity",value:function(t){t.validity.valid?this._hideInputErr(t):this._showInputErr(t,t.validationMessage)}},{key:"_hasInvalidInput",value:function(t){return t.some((function(t){return!t.validity.valid}))}},{key:"_toggleBtnState",value:function(t,e){this._hasInvalidInput(t)?(e.classList.add(this._inactiveBtnClass),e.setAttribute("disabled","")):(e.classList.remove(this._inactiveBtnClass),e.removeAttribute("disabled"))}},{key:"_setEventListeners",value:function(){var t=this;this._inputList=Array.from(this._formEl.querySelectorAll(this._inputSel)),this._buttonEl=this._formEl.querySelector(this._submitBtnSel),this._toggleBtnState(this._inputList,this._buttonEl),this._inputList.forEach((function(e){e.addEventListener("input",(function(){t._checkInputValidity(e),t._toggleBtnState(t._inputList,t._buttonEl)}))}))}},{key:"enableValidation",value:function(){this._formEl.addEventListener("submit",(function(t){t.preventDefault()})),this._setEventListeners()}},{key:"resetValidation",value:function(){var t=this;1===this._inputList.length&&Array.from(this._inputList),this._inputList.forEach((function(e){t._hideInputErr(e)})),this._toggleBtnState(this._inputList,this._buttonEl)}}])&&r(e.prototype,n),t}();function i(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var a=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._popupElement=document.querySelector(e),this._popupSelector=e,this._handleEsc=this._handleEsc.bind(this),this._handleClose=this._handleClose.bind(this),this.open=this.open.bind(this),this.close=this.close.bind(this)}var e,n;return e=t,(n=[{key:"_handleEsc",value:function(t){"Escape"===t.key&&this.close()}},{key:"_handleClose",value:function(t){(t.target.classList.contains("modal")||t.target.classList.contains("modal__close-btn"))&&this.close()}},{key:"_setEventListeners",value:function(){this._popupElement.addEventListener("click",this._handleClose),document.addEventListener("keyup",this._handleEsc)}},{key:"_removeEventListeners",value:function(){this._popupElement.removeEventListener("click",this._handleClose),document.removeEventListener("keyup",this._handleEsc)}},{key:"open",value:function(){this._popupElement.classList.add("modal_display"),this._setEventListeners()}},{key:"close",value:function(){this._popupElement.classList.remove("modal_display"),this._removeEventListeners()}}])&&i(e.prototype,n),t}();function c(t){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},c(t)}function u(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function s(){return s="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=l(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},s.apply(this,arguments)}function l(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=_(t)););return t}function h(t,e){return h=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t},h(t,e)}function f(t,e){if(e&&("object"===c(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}function _(t){return _=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},_(t)}var d=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&h(t,e)}(a,t);var e,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=_(r);if(o){var n=_(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return f(this,t)});function a(t,e){var n,r=t.handleSubmit;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._handleSubmit=r,n}return e=a,(n=[{key:"open",value:function(t,e){this.card=t,this.id=e,s(_(a.prototype),"open",this).call(this)}},{key:"_setEventListeners",value:function(){s(_(a.prototype),"_setEventListeners",this).call(this),this._popupElement.addEventListener("submit",this._handleSubmit)}},{key:"_removeEventListeners",value:function(){s(_(a.prototype),"_removeEventListeners",this).call(this),this._popupElement.removeEventListener("submit",this._handleSubmit)}}])&&u(e.prototype,n),a}(a);function p(t){return p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},p(t)}function v(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function y(t,e){return y=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t},y(t,e)}function m(t,e){if(e&&("object"===p(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}function b(t){return b=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},b(t)}var k=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&y(t,e)}(a,t);var e,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=b(r);if(o){var n=b(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return m(this,t)});function a(t,e){var n,r=t.handleSubmit;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._handleSubmit=r,n._saveButton=document.querySelector(e).querySelector(".modal__save"),n}return e=a,(n=[{key:"handleLoading",value:function(){"Saving..."===this._saveButton.textContent?".modal_type_card"!==this._popupSelector?this._saveButton.textContent="Save":this._saveButton.textContent="Create":this._saveButton.textContent="Saving..."}},{key:"_getInputValues",value:function(){var t=this;return this._inputList=this._popupElement.querySelectorAll(".modal__input"),this._formValues={},this._inputList.forEach((function(e){t._formValues[e.name]=e.value})),this._formValues}},{key:"setSubmitListener",value:function(){var t=this;this._popupElement.addEventListener("submit",(function(e){e.preventDefault(),t._handleSubmit(t._getInputValues())}))}}])&&v(e.prototype,n),a}(a);function E(t){return E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},E(t)}function g(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function S(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function w(){return w="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=C(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},w.apply(this,arguments)}function C(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=I(t)););return t}function L(t,e){return L=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t},L(t,e)}function O(t,e){if(e&&("object"===E(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}function I(t){return I=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},I(t)}var j=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&L(t,e)}(a,t);var e,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=I(r);if(o){var n=I(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return O(this,t)});function a(){return g(this,a),i.apply(this,arguments)}return e=a,(n=[{key:"open",value:function(t,e){this._popupElement.querySelector(".modal__caption").textContent=e;var n=this._popupElement.querySelector(".modal__image");n.src=t,n.alt="Image of ".concat(e),n.onerror=function(){n.alt="Image not found"},w(I(a.prototype),"open",this).call(this)}}])&&S(e.prototype,n),a}(a),T=j;function P(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var B=function(){function t(e,n){var r=e.data,o=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.items=r,this._renderer=o,this._container=document.querySelector(n)}var e,n;return e=t,(n=[{key:"renderItems",value:function(){var t=this;this.items.reverse().forEach((function(e){t._renderer(e)}))}},{key:"addItem",value:function(t){this._container.prepend(t)}}])&&P(e.prototype,n),t}();function q(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var D=function(){function t(e){var n=e.nameSelector,r=e.aboutSelector,o=e.avatarSelector;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._nameElement=document.querySelector(n),this._aboutElement=document.querySelector(r),this._avatarElement=document.querySelector(o)}var e,n;return e=t,(n=[{key:"getUserInfo",value:function(){return{name:this._nameElement.textContent,about:this._aboutElement.textContent}}},{key:"setUserInfo",value:function(t){var e=t.name,n=t.about;e&&(this._nameElement.textContent=e),n&&(this._aboutElement.textContent=n)}},{key:"setAvatar",value:function(t){var e=t.link;e&&(this._avatarElement.src=e)}},{key:"saveUserData",value:function(t){this.userData=t}}])&&q(e.prototype,n),t}();function R(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var x=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._baseUrl=e.baseUrl,this._groupID=e.groupID,this._authToken=e.authToken}var e,n;return e=t,(n=[{key:"_checkServerCode",value:function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))}},{key:"getProfileInfo",value:function(){var t=this;return fetch("".concat(this._baseUrl,"/").concat(this._groupID,"/users/me"),{headers:{authorization:this._authToken}}).then((function(e){return t._checkServerCode(e)}))}},{key:"getInitialCards",value:function(){var t=this;return fetch("".concat(this._baseUrl,"/").concat(this._groupID,"/cards"),{headers:{authorization:this._authToken}}).then((function(e){return t._checkServerCode(e)}))}},{key:"saveProfile",value:function(t){var e=this,n=t.name,r=t.about;return fetch("".concat(this._baseUrl,"/").concat(this._groupID,"/users/me"),{method:"PATCH",headers:{authorization:this._authToken,"Content-Type":"application/json"},body:JSON.stringify({name:n,about:r})}).then((function(t){return e._checkServerCode(t)}))}},{key:"saveAvatar",value:function(t){var e=this;return fetch("".concat(this._baseUrl,"/").concat(this._groupID,"/users/me/avatar"),{method:"PATCH",headers:{authorization:this._authToken,"Content-Type":"application/json"},body:JSON.stringify({avatar:t})}).then((function(t){return e._checkServerCode(t)}))}},{key:"addCard",value:function(t){var e=this,n=t.name,r=t.link;return fetch("".concat(this._baseUrl,"/").concat(this._groupID,"/cards"),{method:"POST",headers:{authorization:this._authToken,"Content-Type":"application/json"},body:JSON.stringify({name:n,link:r})}).then((function(t){return e._checkServerCode(t)}))}},{key:"trashCard",value:function(t){var e=this;return fetch("".concat(this._baseUrl,"/").concat(this._groupID,"/cards/").concat(t),{method:"DELETE",headers:{authorization:this._authToken}}).then((function(t){return e._checkServerCode(t)}))}},{key:"addLike",value:function(t){var e=this;return fetch("".concat(this._baseUrl,"/").concat(this._groupID,"/cards/likes/").concat(t),{method:"PUT",headers:{authorization:this._authToken,"Content-Type":"application/json"}}).then((function(t){return e._checkServerCode(t)}))}},{key:"removeLike",value:function(t){var e=this;return fetch("".concat(this._baseUrl,"/").concat(this._groupID,"/cards/likes/").concat(t),{method:"DELETE",headers:{authorization:this._authToken,"Content-Type":"application/json"}}).then((function(t){return e._checkServerCode(t)}))}}])&&R(e.prototype,n),t}();function A(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}var U={formSel:".modal__form",inputSel:".modal__input",submitBtnSel:".modal__save",inactiveBtnClass:"modal__save_inactive",inputErrClass:"modal__input_type_error",errorClass:"modal__input-error"},V=new k({handleSubmit:function(t){V.handleLoading(),et.saveProfile(t).then((function(){rt.setUserInfo(t),V.close(),V.handleLoading()})).catch((function(t){"Could not edit profile: ".concat(t)}))}},".modal_type_profile");V.setSubmitListener();var z=new o(U,document.querySelector(".modal__form_type_profile")),N=document.querySelector("#name"),J=document.querySelector("#about");z.enableValidation(),document.querySelector(".profile__edit-btn").addEventListener("click",(function(){var t=rt.getUserInfo(),e=t.name,n=t.about;N.value=e,J.value=n,z.resetValidation(),V.open()}));var H=document.querySelector(".profile__avatar"),M=new k({handleSubmit:function(t){M.handleLoading(),et.saveAvatar(t.link).then((function(){rt.setAvatar(t),M.close(),M.handleLoading()})).catch((function(t){"Could not edit avatar: ".concat(t)}))}},".modal_type_avatar");M.setSubmitListener();var $=document.querySelector(".modal__form_type_avatar"),F=new o(U,$);F.enableValidation(),H.addEventListener("click",(function(){$.reset(),F.resetValidation(),M.open()}));var G=function(t){return et.addLike(t)},K=function(t){return et.removeLike(t)},Q=function(t){var e=new n(t,"#card",ot,G,K,tt,Z).createCard();nt.addItem(e)},W=new k({handleSubmit:function(t){W.handleLoading(),et.addCard(t).then((function(t){Q(t),W.close()})).then(W.handleLoading()).catch((function(t){return"Could not add card: ".concat(t)}))}},".modal_type_card");W.setSubmitListener();var X=document.querySelector(".modal__form_type_card"),Y=new o(U,X);Y.enableValidation(),document.querySelector(".profile__add-btn").addEventListener("click",(function(){X.reset(),Y.resetValidation(),W.open()}));var Z=new d({handleSubmit:function(t){t.preventDefault(),et.trashCard(Z.id).then(Z.card.remove()).then(Z.close()).catch((function(t){"Could not remove card: ".concat(t)}))}},".modal_type_trash"),tt=new T(".modal_type_preview"),et=new x({baseUrl:"https://around.nomoreparties.co/v1",groupID:"group-11",authToken:"dd03cd11-47a0-450d-9165-34e32dd702c6"}),nt=new B({data:null,renderer:Q},".cards"),rt=new D({nameSelector:".profile__name",aboutSelector:".profile__about",avatarSelector:".profile__avatar"}),ot=null;Promise.all([et.getInitialCards(),et.getProfileInfo()]).then((function(t){var e,n,r=(n=2,function(t){if(Array.isArray(t))return t}(e=t)||function(t,e){var n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=n){var r,o,i=[],a=!0,c=!1;try{for(n=n.call(t);!(a=(r=n.next()).done)&&(i.push(r.value),!e||i.length!==e);a=!0);}catch(t){c=!0,o=t}finally{try{a||null==n.return||n.return()}finally{if(c)throw o}}return i}}(e,n)||function(t,e){if(t){if("string"==typeof t)return A(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?A(t,e):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];ot=i,nt.items=o,nt.renderItems(),rt.setAvatar({link:ot.avatar}),rt.setUserInfo({name:ot.name,about:ot.about})})).catch((function(t){return"Unable to load data: ".concat(t)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,